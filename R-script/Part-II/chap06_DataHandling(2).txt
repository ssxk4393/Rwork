################################################
# 2. dplyr 패키지 활용
################################################
# plyr - java, dplyr - c++

# dplyr 패키지와 데이터 셋 hflight 설치
install.packages(c("dplyr", "hflights"))
library(dplyr)
library(hflights) 

# 차원 보기
dim(hflights) # 227496     21

# 1. tbl_df() 함수 : 데이터셋 화면창 안에서 한 눈에 파악할 수 있는 데이터 구성
hflights
hflights_df <- tbl_df(hflights)
hflights_df


# 2. filter(dataframe, 조건1, 조건2)함수를 이용한 데이터 추출
# 1월 1일 데이터 추출
filter(hflights_df, Month == 1 & DayofMonth == 1) # , == AND(&)

# 1월 혹은 2월 데이터 추출
filter(hflights_df, Month == 1 | Month == 2) # OR

# 3. arrange()함수를 이용한 정렬(1.년도, 2.월, 3.도착시간) - 오름차순 
arrange(hflights_df, Year, Month, ArrTime )

# Month 기준 내림차순 정렬 - desc(변수)
arrange(hflights_df, desc(Month))

# 4. select()함수를 이용한 열 조작
select(hflights_df, Year, Month, DayOfWeek, ArrDelay)  # 4개 칼럼 선택

# 칼럼의 범위 지정 : Year~DayOfWeek 선택
select(hflights_df, Year:DayOfWeek)

# 칼럼의 범위 제외 : Year부터 DayOfWeek 제외
select(hflights_df, -(Year:DayOfWeek))

# -------------------------------------------------------------
# <실습문제> Month 기준으로 내림차순 정렬하여  
#            Year, Month, AirTime, ArrDelay 컬럼을 선택하시오.
# -------------------------------------------------------------

# 5. mutate() 함수를 이용하여 칼럼 추가(변형-파생변수 만들기)
# 파생변수 : 도착지연 - 출발지연 시간 
mutate(hflights_df, diff = ArrDelay - DepDelay, 
       diff_per_hour = diff/(AirTime/60) )


# 새로 추가된 열을 select() 함수로 보기
select(mutate(hflights_df, diff = ArrDelay - DepDelay, 
              diff_per_hour = diff/(AirTime/60) ), 
       Year, Month, ArrDelay, DepDelay, diff, diff_per_hour)


# 6. summarise()함수를 이용한 집계 - 출발지연시간 평균 
summarise(hflights_df, cnt = n(), delay = mean(DepDelay, na.rm = TRUE))


# 7. group_by(dataframe, 기준변수)함수를 이용한 그룹화
# - 형식) group_by(dataframe, 기준변수)함수

# 예제) 각 항공기별 비행편수가 20편 이상이고, 평균 비행거리가 
#       2,000마일 이하인 경우의 평균 도착지연시간 구하기

# 1) 비행편수를 구하기 위해서 항공기별 그룹화
planes <- group_by(hflights_df, TailNum) # TailNum : 항공기 일련번호
planes

# 2) 항공기별 요약 : 비행편수, 평균 비행거리, 평균 연착시간
planesInfo <- summarise(planes, count = n(), 
                        dist=mean(Distance, na.rm=T), 
                        delay=mean(ArrDelay, na.rm = T))
planesInfo # TailNum count      dist     delay

# 3) planesInfo객체를 대상으로 조건 지정
result <- filter(planesInfo, count >= 20 & dist <= 2000)
head(result)
