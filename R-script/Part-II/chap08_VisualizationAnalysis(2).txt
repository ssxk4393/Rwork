##########################################
# 2. latticeExtra
##########################################
# Extra Graphical Utilities Based on Lattice
# lattice 기반의 유용한 그래픽 함수를 추가한 패키지 
#필요한 패키지를 로딩중입니다: RColorBrewer
#필요한 패키지를 로딩중입니다: lattice
###########################################
install.packages("latticeExtra")
library(latticeExtra)
data(SeatacWeather) # latticeExtra 데이터
str(SeatacWeather) # 'data.frame':	90 obs. of  14 variables:


# 주요 함수 
# 1. doubleYScale() # latticeExtra
# (1) y축:강수량(precip) ~ x축:일(day) | 조건:월(month) , 직선 그래프(type="h")
rain <- xyplot(precip ~ day | month, data=SeatacWeather, type="h")
print(rain) # 월별 강수량 직선 그래프

# (2) y축(최저기온+최고기온)~x축:일(day) | 조건월(month), 선그래프(type="l")
temp <- xyplot(min.temp + max.temp ~ day | month,
data=SeatacWeather, type="l", layout=c(3,1)) # type=line
print(temp)

# (3) 기온(2)과 강수량(1) 그래프 통합-doubleYScale(latticeExtra 제공)
doubleYScale(temp, rain,  style1=0, style2=3, add.ylab2=T, 
text=c("min", "max", "rain"), columns=3)

# 왼쪽 y축 style(style1=0), 오른쪽 y축 style(style2=3), 
# layout : temp 기준
# 왼쪽 y축이름(min.temp + max.temp)
# add.ylab2=T : 오른쪽 Y축이름(precip), text : 범례 추가

# 직전 그래프에 색상 추가 
update(trellis.last.object(), 
par.settings=simpleTheme(col=c("green","red","blue")))


# 2. ecdfplot() # latticeExtra
# New York Choral Society 합창단 성악가의 목소리 영역과 키 관계
# Heights of New York Choral Society singers 
  
data(singer, package = "lattice") 
head(singer)
str(singer) # 'data.frame': 235 obs. of  2 variables
names(singer)
# height voice.part
range(singer$height) # [1] 60 76
attributes(singer$voice.part) #변수의 속성보기


# Empirical CDF 누적분포 결과 예시 - Bass2 패널 
# 결과 : 전체 관측치 26에서 72가 7회 빈도수를 보여 
# Empirical CDF 26.9% 누적분포가 나타남

# Bass 2 서브셋 작성
data <- subset(singer, singer$voice.part=='Bass 2')
str(data) # [1] 26  2 -> Bass 2 관측치 26개
range(data$height) # [1] 66 75 -> Bass 2 키 범위
table(data$height) # Bass 2 키 빈도수
#66 67 68 69 70 71 72 74 75 
# 1  2  2  1  4  1  7  4  4 
7/26 # [1] 0.2692308 -> 누적분포 : 26.9% -> 누적그래프에서 확인
# 누적그래프 : y축의 전체 분포를 1로 표현한 상태에서 x축의 빈도수를
# 계단모양으로 누적하여 그래프가 그려진다. 

# Trellis Displays of Empirical CDF
# 실증적인(실험에 의한) 누적분포함수(Cumulative Distribution Functions)의
# 조건을 격자구조로 나타낸다.
# 누적분포함수 : 확률 계산에 있어서 확률변수의 특정 값 또는 
# 특정구간의 확률값(뿐만 아니라 특정값 이하의 모든 실수값)에 
# 대한 확률을 계산하는데 경우 이용하는 함수

ecdfplot(~height | voice.part, data = singer)
# factor형 변수(voice.part)를 조건으로 height변수에 CDF 적용 누적분포함수 


# 3. horizonplot() # latticeExtra
# EuStockMarkets : datasets 패키지공제, Daily Closing Prices of Major European Stock Indices, 1991-1998
# Daily Closing Prices of Major European Stock Indices, 1991–1998
# 1991~1998년 유럽의 주요 주가 지수의 일일 마감 가격
# 년도에 의해서 4개의 칼럼(DAX(독일),SMI(스위스),CAC(프랑스),FTSE(영국))이 구성되며, 
# 각 컬럼 당 1860개의 데이터로 구성되어 있다.
# 년도별도 4개의 주식에 대한 주가 지수가 시계열 데이터로 표현   
head(EuStockMarkets) # DAX    SMI    CAC   FTSE
str(EuStockMarkets) # mts [1:1860, 1:4] 1629 1614 1607 1621 1618 ...
attributes(EuStockMarkets)
#$class
#[1] "mts"    "ts"     "matrix"
summary(EuStockMarkets) #주식별 요약통계량

EuStockMarkets
# Plot many time series in parallel by cutting the y range into segments and 
# overplotting them with color representing the magnitude and 
# direction of deviation.

# 시계열 자료를 병렬로 플로팅해주수는 함수  
horizonplot(EuStockMarkets, colorkey = TRUE, 
     origin = 4000, horizonscale = 1000)  
# colorkey = TRUE : 범례
# horizonscale = 1000 : 가로 범위(1860에서 1000까지만)
# origin = 4000 : 중심위치


# 4. mapplot() # latticeExtra

# This data set records the annual rates of death (1999-2003) due to cancer by sex in US counties. 
# 1999~ 2003년도에 미국 도시에서 sex에 의한 암의 원인으로 사망한 비율
head(USCancerRates) #  latticeExtra 패키지 제공
data(USCancerRates)
str(USCancerRates) # 'data.frame':	3041 obs. of  8 variables:

#Produces Trellis displays of numeric (and eventually categorical) data on a map.
#This is largely meant as a demonstration, and users looking for serious map 
#drawing capabilities should look elsewhere (see below).
# Draw lines and polygons as speciﬁed by a map database.

install.packages("maps")
install.packages("mapproj")
library(maps) #  map()함수
library(mapproj) # projection 지원


# maps 패키지에서 제공되는 map()함수 
# map database을 이용하여 특별한 선이나 다각형을 그려준다. 
# database와 투사방법에 의해서 지도가 그려진다.  
# map(database, plot, fill, projection)
map = map("county", plot = F, fill = T, projection = "mercator")
# database="world", usa(usa,state,county-주 경계)
# This database produces a map of the counties of the United States mainland generated from US Department of the Census data (see the reference).
# county : 미국인구조사국의 데이터에 의해서 미국 영토의 주 지도가 만들어진 데이터베이스 
# plot = T : 플로팅 여부
# fill = TRUE : 바인딩된 데이터에 의해서 색이 채워진다.
# projection=mercator, tetra, azequalarea : 투사 방법
# projection = "mercator" : 네덜란드의 지리학자-메르카토르의 투영법 : 지도 제작법 
# 투사 방법에 따라서 크기와 모양이 조금씩 달라진다.

# Produces Trellis displays of numeric (and eventually categorical) data on a map. 
# 지도의 수치 데이터를 격자 구조로 그려준다.
#This is largely meant as a demonstration, and users looking for serious map 
# 주로 사용자가 지도를 보있 있는 데모를  실제 실제 지도와 유사한 데모ㅇ를 
#drawing capabilities should look elsewhere (see below).

# mapplot(y축 ~ x축 , data, map)
# y축 : USCancerRates 행이름(주 이름)
# x축 : 남자 사망 비율, 여자 사망비율 
mapplot(rownames(USCancerRates) ~ log(rate.male) + log(rate.female), 
        data = USCancerRates, map)

#Warning messages: 제거
suppressWarnings(print(mapplot()))
