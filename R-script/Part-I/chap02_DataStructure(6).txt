# 8) 문자열 처리 함수와 정규표현식 - p.65
# stringr 패키지에서 제공하는 함수 이용 문자열 처리

install.packages("stringr")  # 패키지 설치
library(stringr) # 메모리 로딩

# 형식) str_extract('문자열', '정규표현식')
str_extract("abcd12aaa33", "[0-9]{2}") # "12" -> 연속된 숫자2개 추출(첫번째)
str_extract_all("abcd12aaa33", "[0-9]{2}") # "12" "33" -> 모두

# 1. 반복수 관련 정규표현식 

str <- 'hongkildong35lee45kang55유관순25'
# 연속된 영문자 3개 추출 
result <- str_extract_all(str, '[a-z]{3}') # list 반환 
# 숫자 추출 
result <- str_extract_all(str, '[0-9]{2}') # list 반환
# 한글 추출 
result <- str_extract_all(str, '[가-히]{3}') # list 반환
# 특정 단어 추출 
str_extract_all(str, '유관순')


# 2. 단어와 숫자 관련 정규표현식 
# 단어 : \\w
# 숫자 : \\d

# 주민번호 양식 검사 
jumin <- '123456-3234567'
str_extract_all(jumin, '[0-9]{6}-[1,2,3,4][0-9]{6}')

# email 양식 검사 
email <- 'kp1234@naver.com'
str_extract_all(email, '[a-z]{4,}@[a-z]{3,}.[a-z]{2,}')

# 3. 특정 문자열 제외하는 정규표현식 
str <- 'hongkildong35lee45kang55유관순25'
str_extract_all(str, '[^a-z]{2}')

# 4. 문자열 길이 구하기 
length(str)
str_length(str) # 29


# 5. 문자열 위치(index)
str_locate_all(str, 'k') # 5, 9

# 6. 부분 문자열
str_s <- str_sub(str, 5, 15)
str_s

# 7. 문자열 교체
str2 <- '홍길동,이순신,유관순'
str_replace_all(str2, '홍길동', '김길동')

# 8. 문자열 분리 
str_p <- str_split(str2, ',')
str_p


# 9. 문자열 결합 - paste() : base 패키지 제공  
str3 <- c('홍길동', '이순신', '유관순')
str_result <- paste(str3, collapse = ',')
str_result #  "홍길동,이순신,유관순"

# 10. 특정 문자열 기준으로 양쪽 분리
# - 주민번호 길이 검사 
jumin2 <- '123456-1234567'
jumin_result <- str_split_fixed(jumin2, '-', 2)
jumin_result
jumin_result[,1] # "123456"
jumin_result[,2] # "1234567"



